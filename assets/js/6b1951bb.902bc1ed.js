"use strict";(self.webpackChunkalekhaweb=self.webpackChunkalekhaweb||[]).push([[1790],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6984:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:3},o="Quickstart",p={unversionedId:"Getting started/Quickstart",id:"Getting started/Quickstart",title:"Quickstart",description:"Follow these steps to quickly setup and run your first EdgeChains application in the next 10 minutes:",source:"@site/doc/Getting started/Quickstart.md",sourceDirName:"Getting started",slug:"/Getting started/Quickstart",permalink:"/doc/Getting started/Quickstart",draft:!1,editUrl:"https://github.com/arakoodev/doc/tree/main/doc/Getting started/Quickstart.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/doc/Getting started/Installation"},next:{title:"Techniques",permalink:"/doc/category/techniques"}},s={},l=[{value:"Initial setup",id:"initial-setup",level:3},{value:"Run EdgeChains",id:"run-edgechains",level:3}],c={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quickstart"},"Quickstart"),(0,a.kt)("p",null,"Follow these steps to quickly setup and run your first EdgeChains application in the next 10 minutes:"),(0,a.kt)("h3",{id:"initial-setup"},"Initial setup"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 1:")," Go to the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/arakoodev/EdgeChains/releases/tag/0.5.0"},"latest release")," of EdgeChains. From the assets section, download the ",(0,a.kt)("inlineCode",{parentName:"p"},"jar(edgechain.jar)")," and `associated files(source code (zip) or Source code(tar.gz))'. A single jar file is necessary for running EdgeChains.\n",(0,a.kt)("strong",{parentName:"p"},"Step 2:")," Create a new ",(0,a.kt)("strong",{parentName:"p"},"Java JBang project")," in your desired location."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"If you are not familiar with JBang projects, you can install the JBang plugin in IntelliJ IDE to easily set up and manage your project.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," IntelliJ is recommended as it automatically indexes the project and selects the ",(0,a.kt)("strong",{parentName:"p"},"Java SDK 17 or above"),", which is required for EdgeChains.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 3:")," Copy all the contents from extracted ",(0,a.kt)("inlineCode",{parentName:"p"},"Source code.zip")," and paste them into your working directory. Add the ",(0,a.kt)("inlineCode",{parentName:"p"},"flyfly.jar")," file in the Script folder on the root directory and ",(0,a.kt)("inlineCode",{parentName:"p"},"edgechain-app-1.0.0.jar")," in the FlySpring/edgechain-app/target directory."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 4:")," Navigate to the directory in which you have extracted the files within the IntelliJ IDE."),(0,a.kt)("p",null,"By following these steps, you are now ready to proceed with running your first EdgeChains application."),(0,a.kt)("h3",{id:"run-edgechains"},"Run EdgeChains"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 5:")," Gather your ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"OpenAI API key")),", ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Redis URL")),", ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Port")),", and ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Password")),". If you don't have these handy, you can refer to the following blog sections for instructions on obtaining them:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.arakoo.ai/blog/openai-api-key"},"How to get your OpenAI Key")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.arakoo.ai/blog/redis"},"How to create a new instance in Redis"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 6:")," Create a Starter.java file (or rename it according to your convenience and requirements) and copy the code provided below into the file."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Click to expand"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package com.edgechain;\n\nimport com.edgechain.lib.configuration.RedisEnv;\nimport com.edgechain.lib.request.ArkRequest;\nimport com.edgechain.lib.response.ArkResponse;\nimport io.reactivex.rxjava3.core.Observable;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.web.bind.annotation.*;\n\nimport static com.edgechain.lib.constants.EndpointConstants.*;\n\n@SpringBootApplication\npublic class Starter {\n\n    private final String OPENAI_AUTH_KEY = ""; // YOUR OPENAI KEY\n    private final String PINECONE_AUTH_KEY = ""; // YOUR PINECONE API KEY\n    private final String PINECONE_QUERY_API = ""; // YOUR PINECONE QUERY API\n    private final String PINECONE_UPSERT_API = ""; // YOUR PINECONE UPSERT API\n    private final String PINECONE_DELETE = ""; // YOUR PINECONE DELETE\n\n    public static void main(String[] args) {\n        System.setProperty("server.port", "8080");\n        SpringApplication.run(Starter.class, args);\n    }\n\n    @Bean\n    public RedisEnv redisEnv() {\n        RedisEnv redisEnv = new RedisEnv();\n        redisEnv.setUrl("");\n        redisEnv.setPort(12285);\n        redisEnv.setUsername("default");\n        redisEnv.setPassword("");\n        redisEnv.setTtl(3600); // Configuring ttl for HistoryContext;\n        return redisEnv;\n    }\n\n    @RestController\n    @RequestMapping("/v1/examples")\n    public class ExampleController {\n\n      // ArkRequest can only accept Content-Type application/json & multipart/form-data ~ Define explicitly in your client.\n        @GetMapping\n        public ArkResponse m1(ArkRequest arkRequest) {\n            return new ArkResponse(Observable.just("Hello, My Starter API is working...."));\n        }\n    }\n}\n'))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 7:")," Add your ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"OPENAI Auth Key"))," inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"Starter")," class and ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"Redis URL")),", ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"Password")),", and ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"Port"))," inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"redisEnv")," method of the ",(0,a.kt)("inlineCode",{parentName:"p"},"RedisEnv")," class."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 7:")," Now, run your first EdgeChains application using JBang."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"java -jar flyfly.jar jbang Starter.java edgechain-app-1.0.0.jar\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 8:")," Begin writing your code and building your LLM applications based on your requirements."),(0,a.kt)("p",null,"That's it! You are now ready to start building your EdgeChains application. ",(0,a.kt)("em",{parentName:"p"},"Happy coding!")," "),(0,a.kt)("p",null,"Feel free to modify, experiment and enhance the content as per your specific requirements."))}d.isMDXComponent=!0}}]);