"use strict";(self.webpackChunkalekhaweb=self.webpackChunkalekhaweb||[]).push([[1790],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=l(r),m=o,g=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return r?n.createElement(g,a(a({ref:t},u),{},{components:r})):n.createElement(g,a({ref:t},u))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[c]="string"==typeof e?e:o,a[1]=p;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6984:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_position:3},a="Quickstart",p={unversionedId:"Getting started/Quickstart",id:"Getting started/Quickstart",title:"Quickstart",description:"Follow these steps to quickly setup and run your first EdgeChains application in the next 10 minutes:",source:"@site/doc/Getting started/Quickstart.md",sourceDirName:"Getting started",slug:"/Getting started/Quickstart",permalink:"/doc/Getting started/Quickstart",draft:!1,editUrl:"https://github.com/arakoodev/doc/tree/main/doc/Getting started/Quickstart.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/doc/Getting started/Introduction"},next:{title:"Techniques",permalink:"/doc/category/techniques"}},s={},l=[{value:"Initial setup",id:"initial-setup",level:3},{value:"Run EdgeChains",id:"run-edgechains",level:3}],u={toc:l},c="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quickstart"},"Quickstart"),(0,o.kt)("p",null,"Follow these steps to quickly setup and run your first EdgeChains application in the next 10 minutes:"),(0,o.kt)("h3",{id:"initial-setup"},"Initial setup"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1:")," Download Output.zip by clicking on the Latest Build&Run once you reach the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/arakoodev/EdgeChains/actions"},"actions page")," of Arakoo."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2:"),"  Once Output.zip is downloaded, then extract the folder and put this file into the directory."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3:"),"  Now, Open the directory using IntelliJ ==> It will index automatically and then always use Java SDK 17 or above."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note:")," The starter.java file can be renamed to any name")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 4:"),"  Write your code & build phenomenal applications using EdgeChainsSDK. "),(0,o.kt)("p",null,"By following these steps, you are now ready to proceed with running your first EdgeChains application."),(0,o.kt)("h3",{id:"run-edgechains"},"Run EdgeChains"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 5:")," For Debugging purpose, you can run it via IntelliJ or else with jbang (especially where you are using external libs such as Thymeleaf i.e., java -jar edgechain.jar jbang Starter.java."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 6:")," If you are using Redis, specify the following properties: "),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Click to expand"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'properties.setProperty("redis.url", "");\nproperties.setProperty("redis.port","12285");\nproperties.setProperty("redis.username", "default");\nproperties.setProperty("redis.password", "");\nproperties.setProperty("redis.ttl", "3600");\n'))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 7:")," If you are using Postgres, specify the following properties: "),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Click to expand"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'properties.setProperty("postgres.db.host", "");\nproperties.setProperty("postgres.db.username", "postgres");\nproperties.setProperty("postgres.db.password", ""); \n'))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 8:")," If you want to use Supabase, specify the following properties: "),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Click to expand"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'\nproperties.setProperty("supabase.url", "https://itlgddqhlxhdbncdqowa.supabase.co%22/);\nproperties.setProperty("supabase.annon.key", ""); \n\n'))),'For JWT decoding: If you aren\'t using Supabase and want to use EdgeChains Authentication feature, therefore make sure your jwt must contain these two fields: - a) email:  "..." - b) role: "authenticated, user_create"',(0,o.kt)("details",null,(0,o.kt)("summary",null,"Click to expand"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'\nproperties.setProperty("jwt.secret", "");\n\n'))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'package com.edgechain;\n\nimport static com.edgechain.lib.constants.EndpointConstants.OPENAI_CHAT_COMPLETION_API;\n\nimport com.edgechain.lib.endpoint.impl.OpenAiEndpoint;\nimport com.edgechain.lib.endpoint.impl.WikiEndpoint;\nimport com.edgechain.lib.jsonnet.JsonnetArgs;\nimport com.edgechain.lib.jsonnet.JsonnetLoader;\nimport com.edgechain.lib.jsonnet.enums.DataType;\nimport com.edgechain.lib.jsonnet.impl.FileJsonnetLoader;\nimport com.edgechain.lib.request.ArkRequest;\nimport com.edgechain.lib.response.ArkEmitter;\nimport com.edgechain.lib.response.ArkResponse;\nimport com.edgechain.lib.rxjava.retry.impl.ExponentialDelay;\nimport com.edgechain.lib.wiki.response.WikiResponse;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.builder.SpringApplicationBuilder;\nimport org.springframework.http.MediaType;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\npublic class Starter {\n\n  public static void main(String[] args) {\n    Starter\n    System.setProperty("server.port", "8080");\n\n    Properties properties = new Properties();\n\n    // Define your custom properties like this;\n    properties.setProperty("cors.origins", "http://localhost:4200");\n    properties.setProperty("spring.jpa.show-sql", "true");\n    properties.setProperty("spring.jpa.properties.hibernate.format_sql", "true");\n\n    new SpringApplicationBuilder(Starter.class).properties(properties).run(args);\n  }\n\n  @RestController\n  public class WikiController {\n\n    @GetMapping("/v1/myThing")\n    public ArkResponse m1(ArkRequest arkRequest) {\n          // Do Your Implementation\n    }\n\n  }\n}\n')))}d.isMDXComponent=!0}}]);