"use strict";(self.webpackChunkalekhaweb=self.webpackChunkalekhaweb||[]).push([[2206],{3905:(e,t,n)=>{n.d(t,{Zo:()=>f,kt:()=>p});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},f=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,f=d(e,["components","mdxType","originalType","parentName"]),m=l(n),u=o,p=m["".concat(s,".").concat(u)]||m[u]||c[u]||a;return n?r.createElement(p,i(i({ref:t},f),{},{components:n})):r.createElement(p,i({ref:t},f))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d[m]="string"==typeof e?e:o,i[1]=d;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6937:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={},i="Models: Choosing from different LLMs and embedding models",d={unversionedId:"Edgechain Modules/Module 1: Choosing from different LLMs and embedding models",id:"Edgechain Modules/Module 1: Choosing from different LLMs and embedding models",title:"Models: Choosing from different LLMs and embedding models",description:"Currently, many different LLMs are emerging. LangChain offers integrations to a wide range of models and a streamlined interface to all of them.",source:"@site/doc/Edgechain Modules/Module 1: Choosing from different LLMs and embedding models.md",sourceDirName:"Edgechain Modules",slug:"/Edgechain Modules/Module 1: Choosing from different LLMs and embedding models",permalink:"/doc/Edgechain Modules/Module 1: Choosing from different LLMs and embedding models",draft:!1,editUrl:"https://github.com/arakoodev/doc/tree/main/doc/Edgechain Modules/Module 1: Choosing from different LLMs and embedding models.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Example API for edgechains",permalink:"/doc/API documentation/Examples"}},s={},l=[],f={toc:l},m="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"models-choosing-from-different-llms-and-embedding-models"},"Models: Choosing from different LLMs and embedding models"),(0,o.kt)("p",null,"Currently, many different LLMs are emerging. LangChain offers integrations to a wide range of models and a streamlined interface to all of them.\nLangChain differentiates between three types of models that differ in their inputs and outputs:"),(0,o.kt)("p",null,"-LLMs take a string as an input (prompt) and output a string (completion)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"code to be inserted\n")),(0,o.kt)("p",null,"  -Chat models are similar to LLMs. They take a list of chat messages as input and return a chat message."),(0,o.kt)("p",null,"  -Text embedding models take text input and return a list of floats (embeddings), which are the numerical\nrepresentation of the input text.  Embeddings help extract information from a text.\nThis information can then be later used, e.g., for calculating similarities between texts (e.g., movie summaries)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"code to be inserted\n")))}c.isMDXComponent=!0}}]);