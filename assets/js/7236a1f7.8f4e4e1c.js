"use strict";(self.webpackChunkalekhaweb=self.webpackChunkalekhaweb||[]).push([[3978],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(a),g=r,h=d["".concat(p,".").concat(g)]||d[g]||u[g]||i;return a?n.createElement(h,l(l({ref:t},c),{},{components:a})):n.createElement(h,l({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=g;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},6736:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const i={sidebar_position:4},l="Getting Started",o={unversionedId:"Getting_started",id:"Getting_started",title:"Getting Started",description:"Get started by creating a new chain.",source:"@site/doc/Getting_started.md",sourceDirName:".",slug:"/Getting_started",permalink:"/doc/Getting_started",draft:!1,editUrl:"https://github.com/arakoodev/doc/tree/main/doc/Getting_started.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Creating an API from a Plugin",permalink:"/doc/Tutorials/Creating an API from a Plugin"},next:{title:"Core Concepts",permalink:"/doc/Core_concepts"}},p={},s=[{value:"Installation Instructions",id:"installation-instructions",level:2},{value:"System Requirements",id:"system-requirements",level:2},{value:"Basic Setup and Configuration",id:"basic-setup-and-configuration",level:2},{value:"Downloading the release jar",id:"downloading-the-release-jar",level:3},{value:"Compiling it yourself",id:"compiling-it-yourself",level:3},{value:"Compiling flyfly.jar",id:"compiling-flyflyjar",level:4},{value:"Compiling edgechain-app-VERSION_NUMBER.jar",id:"compiling-edgechain-app-version_numberjar",level:3},{value:"Integrating EdgeChains into your code",id:"integrating-edgechains-into-your-code",level:3},{value:"Running EdgeChains",id:"running-edgechains",level:3},{value:"Usage",id:"usage",level:2},{value:"Document-based Chatting with EdgeChains",id:"document-based-chatting-with-edgechains",level:3},{value:"Playgrounds",id:"playgrounds",level:2}],c={toc:s},d="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"Get started by ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://www.arakoo.ai/doc/category/Tutorials"},"creating a new chain")),"."),(0,r.kt)("p",null,"Or ",(0,r.kt)("strong",{parentName:"p"},"try EdgeChains immediately")," by trying out existing ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://www.arakoo.ai/doc/category/Examples"},"Examples")),"."),(0,r.kt)("h2",{id:"installation-instructions"},"Installation Instructions"),(0,r.kt)("p",null,"To install EdgeChains, follow these steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open your terminal or command prompt.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Choose one of the following installation methods:"))),(0,r.kt)("h2",{id:"system-requirements"},"System Requirements"),(0,r.kt)("p",null,"Make sure your system meets the following requirements to run EdgeChains:"),(0,r.kt)("h2",{id:"basic-setup-and-configuration"},"Basic Setup and Configuration"),(0,r.kt)("p",null,"You can get EdgeChains by either downloading the release jar or compiling it yourself. We recommend the former."),(0,r.kt)("h3",{id:"downloading-the-release-jar"},"Downloading the release jar"),(0,r.kt)("p",null,"You can download the release jars from the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/arakoodev/EdgeChains/releases"},"releases page"),". Download both flyfly.jar and edgechain-app-VERSION_NUMBER.jar."),(0,r.kt)("h3",{id:"compiling-it-yourself"},"Compiling it yourself"),(0,r.kt)("p",null,"There are 2 jar files to compile - ",(0,r.kt)("inlineCode",{parentName:"p"},"flyfly.jar")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"edgechain-app-1.0.0.jar"),". You can compile EdgeChains yourself by following the instructions below:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Clone the git repository using:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/arakoodev/EdgeChains.git\n"))),(0,r.kt)("li",{parentName:"ol"},"Go to the FlySpring repository using:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd FlySpring\n")),(0,r.kt)("h4",{id:"compiling-flyflyjar"},"Compiling flyfly.jar"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Compile the flyfly.jar file using:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd autoroute\nmvn clean package -P gofly\ncd ../flyfly\nmvn clean package -P gofly\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"flyfly.jar")," file will be generated in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Script")," folder on the root directory."),(0,r.kt)("h3",{id:"compiling-edgechain-app-version_numberjar"},"Compiling edgechain-app-VERSION_NUMBER.jar"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Compile the edgechain-app-VERSION_NUMBER.jar file using:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd edgechain-app\nmvn clean package\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"edgechain-app-VERSION_NUMBER.jar")," file will be generated in the ",(0,r.kt)("inlineCode",{parentName:"p"},"FlySpring/edgechain-app/target")," directory."),(0,r.kt)("h3",{id:"integrating-edgechains-into-your-code"},"Integrating EdgeChains into your code"),(0,r.kt)("p",null,"You can play around with the base EdgeChains library, or integrate it into your existing codebase as well! Just follow the instructions below:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a folder called ",(0,r.kt)("inlineCode",{parentName:"p"},"dependencies")," in your root project folder, ie., the one having the ",(0,r.kt)("inlineCode",{parentName:"p"},"pom.xml"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Place the ",(0,r.kt)("inlineCode",{parentName:"p"},"edgechain-app-VERSION_NUMBER.jar")," app file in the ",(0,r.kt)("inlineCode",{parentName:"p"},"dependencies")," folder.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the following to your ",(0,r.kt)("inlineCode",{parentName:"p"},"pom.xml")," file:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.edgechain</groupId>\n    <artifactId>edgechain-app</artifactId>\n    <version>VERSION_NUMBER</version>\n    <scope>system</scope>\n    <systemPath>${basedir}/dependencies/edgechain-app-VERSION_NUMBER.jar</systemPath>\n</dependency>\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Now you can run ",(0,r.kt)("inlineCode",{parentName:"li"},"mvn clean install"),". This will install the EdgeChains library into your local maven repository.")),(0,r.kt)("h3",{id:"running-edgechains"},"Running EdgeChains"),(0,r.kt)("p",null,"Now, you can run EdgeChains as a service or as an application using jbang, like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"java -jar flyfly.jar jbang EdgeChainServiceApplication.java edgechain-app-1.0.0.jar\n")),(0,r.kt)("p",null,"to start the service and"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"java -jar flyfly.jar jbang EdgeChainApplication.java edgechain-app-1.0.0.jar\n")),(0,r.kt)("p",null,"to start the application."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Here are a few fun tutorials that can help you get started!"),(0,r.kt)("h3",{id:"document-based-chatting-with-edgechains"},"Document-based Chatting with EdgeChains"),(0,r.kt)("p",null,'EdgeChains can be used to chat with a document. For example, you can chat with a document about the topic of "Bitcoin" or "Machine Learning". To do this, you can use the ',(0,r.kt)("inlineCode",{parentName:"p"},"EdgeChainService")," class. "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"First, fill up the ",(0,r.kt)("inlineCode",{parentName:"p"},"EdgeChainApplication.java")," file with the appropriate OpenAI and Redis credentials.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Then run the command on the terminal:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"java -jar flyfly.jar jbang EdgeChainServiceApplication.java edgechain-app-1.0.0.jar\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Now, you have to create a context for the chat. Think of it like a Chat Session in ChatGPT. You can do it by:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl  -X POST \\\n'localhost:8080/v1/history-context/create' \\\n--header 'Accept: */*' \\\n--header 'User-Agent: Thunder Client (https://www.thunderclient.com)' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n  \"maxTokens\": 4096\n}'\n")),(0,r.kt)("p",{parentName:"li"},"You'll get a response like:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "historycontext-571b0c2c-8d07-452b-a1d8-96bd5f82234e",\n  "maxTokens": 4096,\n  "message": "Session is created. Now you can start conversational question and answer"\n}\n')),(0,r.kt)("p",null,"Save the ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," somewhere. You'll need it later."),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Now you need to upsert a document to EdgeChains. You can do it so by:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl  -X POST \\\n  'localhost:8080/v1/redis/openai/upsert' \\\n  --header 'Accept: */*' \\\n  --header 'User-Agent: Thunder Client (https://www.thunderclient.com)' \\\n  --form 'file=@./8946-Article Text-12474-1-2-20201228.pdf'\n")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},'Now, you can start chatting with the document. For example, we ask the question "What is the transformer architecture?". We do this by:')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl  -X POST \\\n  'localhost:8080/v1/redis/openai/query/context/<HISTORY_CONTEXT_VALUE>' \\\n  --header 'Accept: */*' \\\n  --header 'User-Agent: Thunder Client (https://www.thunderclient.com)' \\\n  --header 'Content-Type: application/json' \\\n  --data-raw '{\n    \"query\": \"What is the transformer architecture?\"\n}\n'\n")),(0,r.kt)("p",null,"Here is a demo using the famous research paper ",(0,r.kt)("a",{parentName:"p",href:"https://arxiv.org/pdf/1706.03762.pdf"},(0,r.kt)("strong",{parentName:"a"},"Attention is all you need")),":"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://s12.gifyu.com/images/SQ6y0.gif"},(0,r.kt)("img",{parentName:"a",src:"https://s12.gifyu.com/images/SQ6y0.gif",alt:null}))),(0,r.kt)("h2",{id:"playgrounds"},"Playgrounds"),(0,r.kt)("p",null,"If you want to experiment with EdgeChains in a playground environment, you can access the online playgrounds provided by the EdgeChains team. Follow these steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Visit the ",(0,r.kt)("a",{parentName:"p",href:"https://example.com/playground-edgechains"},"EdgeChains Playground"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start exploring the features and capabilities of EdgeChains in the playground environment."))))}u.isMDXComponent=!0}}]);